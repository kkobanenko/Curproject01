#!/bin/bash

# RAG Platform - –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ RAG Platform –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    local status=$1
    local message=$2
    
    case $status in
        "success")
            echo -e "${GREEN}‚úÖ${NC} $message"
            ;;
        "warning")
            echo -e "${YELLOW}‚ö†Ô∏è${NC} $message"
            ;;
        "error")
            echo -e "${RED}‚ùå${NC} $message"
            ;;
        "info")
            echo -e "${BLUE}‚ÑπÔ∏è${NC} $message"
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

if ! command -v docker &> /dev/null; then
    print_status "error" "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    print_status "error" "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if ! command -v python3 &> /dev/null; then
    print_status "error" "Python3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

print_status "success" "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo ""
echo "‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

if [ ! -f "infra/compose/.env.local" ]; then
    print_status "warning" "–§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞..."
    cp infra/compose/env.example infra/compose/.env.local
    print_status "info" "–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ infra/compose/.env.local –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p data/inbox uploads backups logs

# –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
echo "üê≥ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
cd infra/compose

if docker-compose --env-file .env.local up -d postgres redis clickhouse ollama; then
    print_status "success" "–ë–∞–∑–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    print_status "error" "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    exit 1
fi

cd ../..

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

wait_for_service() {
    local service=$1
    local port=$2
    local max_attempts=30
    local attempt=1
    
    echo "   –û–∂–∏–¥–∞–Ω–∏–µ $service –Ω–∞ –ø–æ—Ä—Ç—É $port..."
    
    while [ $attempt -le $max_attempts ]; do
        if netstat -tuln 2>/dev/null | grep -q ":$port "; then
            print_status "success" "$service –≥–æ—Ç–æ–≤"
            return 0
        fi
        
        echo "   –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
        sleep 2
        ((attempt++))
    done
    
    print_status "error" "$service –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

wait_for_service "PostgreSQL" 5432
wait_for_service "Redis" 6379
wait_for_service "ClickHouse" 8123

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama
echo ""
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama..."
if curl -s http://localhost:11434/api/tags > /dev/null; then
    print_status "success" "Ollama –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    print_status "warning" "Ollama –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "üêç –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# API
echo "   –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π API..."
cd apps/api
if pip3 install -r requirements.txt; then
    print_status "success" "API –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    print_status "warning" "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ API –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
fi
cd ../..

# Streamlit
echo "   –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Streamlit..."
cd apps/streamlit_app
if pip3 install -r requirements.txt; then
    print_status "success" "Streamlit –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    print_status "warning" "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Streamlit –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
fi
cd ../..

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."

# API –≤ —Ñ–æ–Ω–µ
echo "   –ó–∞–ø—É—Å–∫ API –Ω–∞ –ø–æ—Ä—Ç—É 8081..."
cd apps/api
python3 -m uvicorn src.main:app --host 0.0.0.0 --port 8081 --reload &
API_PID=$!
cd ../..

# Streamlit –≤ —Ñ–æ–Ω–µ
echo "   –ó–∞–ø—É—Å–∫ Streamlit –Ω–∞ –ø–æ—Ä—Ç—É 8502..."
cd apps/streamlit_app
streamlit run src/main.py --server.port 8502 --server.address 0.0.0.0 &
STREAMLIT_PID=$!
cd ../..

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."

if curl -s http://localhost:8081/health > /dev/null; then
    print_status "success" "API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8081"
else
    print_status "warning" "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

if curl -s http://localhost:8502 > /dev/null; then
    print_status "success" "Streamlit –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8502"
else
    print_status "warning" "Streamlit –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo ""
echo "üéâ RAG Platform –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
echo ""
echo "üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "  - Streamlit UI: http://localhost:8502"
echo "  - API Docs: http://localhost:8081/docs"
echo "  - API Health: http://localhost:8081/health"
echo ""
echo "üê≥ Docker —Å–µ—Ä–≤–∏—Å—ã:"
echo "  - PostgreSQL: localhost:5432"
echo "  - Redis: localhost:6379"
echo "  - ClickHouse: localhost:8123"
echo "  - Ollama: localhost:11434"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: pkill -f 'uvicorn\|streamlit'"
echo "  - –õ–æ–≥–∏ API: tail -f apps/api/logs/app.log"
echo "  - –õ–æ–≥–∏ Streamlit: tail -f apps/streamlit_app/logs/app.log"
echo ""
echo "‚ö†Ô∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
echo "   PID API: $API_PID"
echo "   PID Streamlit: $STREAMLIT_PID"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ PID –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
echo "$API_PID" > /tmp/rag_api.pid
echo "$STREAMLIT_PID" > /tmp/rag_streamlit.pid

echo ""
print_status "info" "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: scripts/dev_stop.sh"
